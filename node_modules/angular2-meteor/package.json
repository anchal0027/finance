{
  "_args": [
    [
      {
        "raw": "angular2-meteor@0.7.1",
        "scope": null,
        "escapedName": "angular2-meteor",
        "name": "angular2-meteor",
        "rawSpec": "0.7.1",
        "spec": "0.7.1",
        "type": "version"
      },
      "/var/www/html/meteor_angular2_bank"
    ]
  ],
  "_from": "angular2-meteor@0.7.1",
  "_id": "angular2-meteor@0.7.1",
  "_inCache": true,
  "_location": "/angular2-meteor",
  "_nodeVersion": "6.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/angular2-meteor-0.7.1.tgz_1478763424278_0.9175858511589468"
  },
  "_npmUser": {
    "name": "urigo",
    "email": "uri.goldshtein@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-meteor@0.7.1",
    "scope": null,
    "escapedName": "angular2-meteor",
    "name": "angular2-meteor",
    "rawSpec": "0.7.1",
    "spec": "0.7.1",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular2-meteor/-/angular2-meteor-0.7.1.tgz",
  "_shasum": "99911ba7dda6b550db561a0b464fc410f1428b1c",
  "_shrinkwrap": null,
  "_spec": "angular2-meteor@0.7.1",
  "_where": "/var/www/html/meteor_angular2_bank",
  "author": {
    "name": "Angular2-Meteor",
    "url": "https://github.com/Urigo/angular2-meteor"
  },
  "browser": "dist/bundles/index.umd.js",
  "bugs": {
    "url": "https://github.com/Urigo/angular2-meteor/issues"
  },
  "dependencies": {
    "underscore": "^1.8.3"
  },
  "description": "Angular 2.0 and Meteor - the perfect stack http://www.angular-meteor.com/",
  "devDependencies": {
    "@angular/common": "^2.0.0",
    "@angular/compiler": "^2.0.0",
    "@angular/core": "^2.0.0",
    "@types/underscore": "^1.7.33",
    "angular2-meteor-polyfills": "^0.1.1",
    "conventional-changelog-cli": "^1.2.0",
    "es6-shim": "^0.35.0",
    "meteor-typings": "^1.3.0",
    "reflect-metadata": "^0.1.2",
    "rollup": "^0.35.9",
    "rollup-plugin-babel": "^2.6.1",
    "rxjs": "5.0.0-beta.11",
    "tsc": "^1.20150623.0",
    "tslint": "^3.6.0",
    "typescript": "2.0.0",
    "typings": "^1.3.0",
    "zone.js": "^0.6.12"
  },
  "directories": {},
  "dist": {
    "shasum": "99911ba7dda6b550db561a0b464fc410f1428b1c",
    "tarball": "https://registry.npmjs.org/angular2-meteor/-/angular2-meteor-0.7.1.tgz"
  },
  "homepage": "http://www.angular-meteor.com",
  "keywords": [
    "angular",
    "angular2",
    "angular2-meteor",
    "meteor",
    "mongo",
    "typescript",
    "html-templates"
  ],
  "license": "MIT",
  "main": "dist/bundles/main.umd.js",
  "maintainers": [
    {
      "name": "urigo",
      "email": "uri.goldshtein@gmail.com"
    }
  ],
  "name": "angular2-meteor",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0",
    "angular2-meteor-polyfills": "^0.1.1"
  },
  "readme": "# Angular2-Meteor [![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][npm-url] [![Build Status](https://travis-ci.org/Urigo/angular-meteor.svg?branch=master)](https://travis-ci.org/Urigo/angular-meteor)  [![Join the chat at https://gitter.im/Reactive-Extensions/RxJS](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Urigo/angular-meteor)\r\nAngular2 + Meteor integration.\r\n\r\n## Table of Contents\r\n* [Tutorial](../../#tutorial)\r\n* [Quick Start](../../#quick-start)\r\n    * [Install package](../../#install-package)\r\n    * [Using Angular 2 in a Meteor app](../../#using-angular-2-in-a-meteor-app)\r\n* [Demos](../../#demos)\r\n* [TypeScript](../../#typescript)\r\n* [Roadmap](../../#roadmap)\r\n* [Contribution](../../#contribution)\r\n\r\n## Tutorial\r\n\r\nIf you are new to Angular2 and/or Meteor but want to learn them quickly, \r\nplease check out our 23-steps Angular2-Meteor [tutorial](http://www.angular-meteor.com/tutorials/socially/angular2/bootstrapping).\r\n\r\n## Questions and Issues\r\n\r\nIf you have rather a question than an issue, please consider the following resources at first:\r\n- [Gitter](https://gitter.im/Urigo/angular-meteor)\r\n- [Stack Overflow `angular2-meteor` tag](http://stackoverflow.com/questions/tagged/angular2-meteor)\r\n- [Meteor forum](https://forums.meteor.com/c/angular)\r\n\r\nThe chances to get a quick response there is higher than posting a new issue here.\r\n\r\nIf you've decided that it's likely a real issue, please consider going through the following list at first:\r\n- Check quickly recently [created](https://github.com/Urigo/angular2-meteor/issues)/[closed](https://github.com/Urigo/angular2-meteor/issues?q=is%3Aissue+is%3Aclosed) issues: chances are high that someone's already created a similar one\r\n  or similar issue's been resolved;\r\n- If your issue looks nontrivial, we would approciate a small demo to reproduce it.\r\n  You will also get a response much faster.\r\n\r\n## Quick Start\r\n\r\n### Install package:\r\n\r\nTo install Angular2-Meteor's NPMs:\r\n````\r\n    npm install angular2-meteor --save\r\n````\r\n\r\nSecond step is to add ` angular2-compilers` package â€” `meteor add angular2-compilers`.\r\nThis package adds custom HTML processor, LESS, SASS and TypeScript compilers.\r\nCustom HTML processor and Style compilers make sure that static resources can be used\r\nin the way that Angular 2 requires, and TypeScript is a recommended JS-superset to develop with Angular 2.\r\n\r\nPlease note that you'll have to remove the standard Meteor HTML processor (and LESS package).\r\nThe reason is that Meteor doesn't allow more than two processor for one extension:\r\n````\r\n   meteor remove blaze-html-templates\r\n````\r\n\r\nAngular 2 heavily relies on some polyfills (`zone.js`, `reflect-metadata` etc).\r\nThere are two ways to add them:\r\n- Add `import 'angular2-meteor-polyfills'` at the top of ts-file that is loaded first;\r\n- Add `barbatus:angular2-polyfills` package. Since it's a package, it's loaded by Meteor before any user code.\r\n\r\nPlease, don't forget to add a main HTML file (can be `index.html` or with any other name) even if your app template consists of one single tag,\r\ne.g., `<body><app></app></body>`.\r\n\r\n### Using Angular 2 in a Meteor app:\r\n\r\nThe package contains `METEOR_PROVIDERS` providers that simplify development of a Meteor app with Angular 2.\r\n\r\nYou can use Mongo collections in the same way as you would do in a regular Meteor app with the Blaze,\r\nthe only thing required is to import and use `METEOR_PROVIDERS` from `angular2-meteor`.\r\nAfter, you can iterate `Mongo.Cursor`s with Angular 2.0's `ngFor` as follows:\r\n\r\n````ts\r\n    import {METEOR_PROVIDERS, MeteorReactive} from 'angular2-meteor';\r\n\r\n    const Parties = new Mongo.Collection('parties');\r\n    \r\n    @Component({\r\n      template: `\r\n        <div *ngFor=\"let party of parties\">\r\n          <p>Name: {{party.name}}</p>\r\n        </div>\r\n      `\r\n    })\r\n    class Socially extends MeteorReactive {\r\n        constructor() {\r\n          this.subscribe('my-subscription');\r\n          this.parties = Parties.find();\r\n        }\r\n    }\r\n\r\n    @NgModule({\r\n      imports: [BrowserModule],\r\n      providers: METEOR_PROVIDERS,\r\n      declarations: [Socially],\r\n      bootstrap: [Socially]\r\n    })\r\n    export class AppModule { }\r\n\r\n    platformBrowserDynamic().bootstrapModule(AppModule);\r\n````\r\n`MeteorReactive` is a special utility class that does two things behind the scene for you:\r\n - releases Meteor and Mongo handlers on the destroy event;\r\n - runs Angular 2 zone on Meteor methods' callbacks with\r\n   debouncing, i.e., reducing number of zone runs to minimun.\r\n\r\nYou can read more about `MeteorReactive` in the [tutorial section] (http://www.angular-meteor.com/tutorials/socially/angular2/privacy-and-publish-subscribe-functions)!\r\n\r\nAt this moment, you are almost set to create awesome apps backed by the power of Angular 2 and Meteor!\r\nWe recommend to check out our awesome [tutorial](http://www.angular-meteor.com/tutorials/socially/angular2/bootstrapping) in order to create more complex apps that have security and routing.\r\n\r\n## Demos\r\n\r\nCheck out two demos for the quick how-to:\r\n\r\n* the Tutorial's [Socially app](https://github.com/Urigo/meteor-angular2.0-socially)\r\n* Simple [Todos](https://github.com/Urigo/Meteor-Angular2/tree/master/examples/todos-meteor-1.3) demo\r\n\r\n## Static Resources\r\n\r\nAngular 2 allows to define a component's template and styles in two ways: using template content inline\r\nor using template URL. We recommend to use inline templates.\r\n\r\nFor that purpose, `angular2-compilers`'s HTML, LESS, and SASS compilers process associated files and\r\nadd Node JS-modules that export string file contents outside.\r\nAfter, one can import a template content in ES6 style:\r\n```\r\n  import template from  './foo.html';\r\n\r\n  import style from './foo.less';\r\n```\r\n\r\nFor more information, please check out [css-compiler](https://github.com/Urigo/angular2-meteor/tree/master/atmosphere-packages/css-compiler)\r\nand [static-templates](https://github.com/Urigo/meteor-static-templates).\r\n\r\n> To get rid of the `module './foo.html' not found` warnigns,\r\n> run \r\n```\r\ntypings install github:meteor-typings/angular2-compilers --global\r\n```\r\n\r\n## TypeScript\r\nThe package uses [TypeScript for Meteor](https://github.com/barbatus/typescript) to compile (transpile) `.ts`-files.\r\n\r\nTypeScript configuration file a.k.a. `tsconfig.json` is supported as well.\r\n\r\nPlease note that `tsconfig.json` is not required, but if you want to configure TypeScript\r\nin your IDE or add more options, place `tsconfig.json` in the root folder of your app.\r\nYou can read about all available compiler options [here](https://github.com/Microsoft/TypeScript/wiki/tsconfig.json).\r\n\r\nDefault TypeScript options for Meteor 1.3 are as follows:\r\n````json\r\n{\r\n  \"compilerOptions\": {\r\n    \"experimentalDecorators\": true,\r\n    \"module\": \"commonjs\",\r\n    \"target\": \"es5\",\r\n    \"moduleResolution\": \"node\",\r\n    \"emitDecoratorMetadata\": true,\r\n    \"sourceMap\": true\r\n  }\r\n}\r\n````\r\n\r\n### Typings\r\n\r\nThere are to two major ways to install declaration files:\r\n- by installing NPM packages;\r\n- by using `typings` utility.\r\n\r\nA lot of NPM packages already contain typings internally, if not,\r\nyou can find almost all typings in the DefinitelyTyped repository. \r\nFor example, to install `jquery` typings from there,\r\nrun `npm install @types/jquery`, and then add a reference\r\nat the top of your main ts-file: `/// <reference types=\"@types/jquery\" />`.\r\n\r\nAs for Meteor typings, there is a special NPM that contains only its typings as well:\r\n`meteor-typings`.\r\nInstall `meteor-typings` package and add the reference as described above.\r\n\r\nAnother one way to add typings of 3-party JavaScript libraries is\r\nto use the [`typings`](https://github.com/typings/typings) utility.\r\nThis utility is designed to search across and install typings not only from `DefinitelyTyped` but\r\nalso own typings registries, which may be helpful in many cases.\r\n\r\nFor example, to install Meteor declaration file run:\r\n````\r\nnpm install typings -g\r\n\r\ntypings install env~meteor --global\r\n````\r\n\r\nFor more information on Meteor typings, please read [here](https://github.com/meteor-typings/meteor).\r\n\r\n## Babel\r\n\r\nIt's possibly to use Angular2 with Babel as the primary language.\r\n\r\nTo make development as convenient as it would be if you chose TypeScript,\r\nthere exist special Babel plugins. So you'll need to install them:\r\n\r\n```\r\n  npm i babel-plugin-angular2-annotations babel-plugin-transform-decorators-legacy babel-plugin-transform-class-properties babel-plugin-transform-flow-strip-types --save-dev\r\n```\r\n\r\nThen add `.babelrc` as follows:\r\n```json\r\n{\r\n  \"plugins\": [\r\n    \"angular2-annotations\",\r\n    \"transform-decorators-legacy\",\r\n    \"transform-class-properties\",\r\n    \"transform-flow-strip-types\"\r\n  ]\r\n}\r\n```\r\n\r\n## Change Log\r\n\r\nChange log of the package is located [here](CHANGELOG.md).\r\n\r\n## Roadmap\r\n\r\nYou can check out the package's roadmap and its status under this repository's issues.\r\n\r\n## Contribution\r\nIf you know how to make integration of Angular 2 and Meteor better, you are very welcome!\r\n\r\nCheck out [CONTRIBUTION.md](CONTRIBUTION.md) for more info.\r\n\r\n[npm-downloads-image]: http://img.shields.io/npm/dm/angular2-meteor.svg?style=flat\r\n[npm-version-image]: http://img.shields.io/npm/v/angular2-meteor.svg?style=flat\r\n[npm-url]: https://npmjs.org/package/angular2-meteor\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Urigo/angular2-meteor.git"
  },
  "scripts": {
    "build": "npm run build-only && npm run bundle",
    "build-only": "tsc || echo not ok",
    "bundle": "npm run rollup:browser && npm run rollup:main",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
    "lint": "tslint modules/**/*.ts",
    "prebuild": "npm run lint",
    "prepublish": "npm run build",
    "pretest": "cd tests && npm install",
    "rollup:browser": "rollup -i ./dist/index.js -o ./dist/bundles/index.umd.js -n ng.meteor -c rollup.config.js",
    "rollup:main": "rollup -i ./dist/main.js -o ./dist/bundles/main.umd.js -n ng.meteor -c rollup.config.js",
    "test": "npm run test:unit && npm run test:app",
    "test:app": "cd tests && meteor test --port 3005 --full-app --once --driver-package=dispatch:mocha-phantomjs",
    "test:unit": "cd tests && meteor test --port 3005 --once --driver-package=dispatch:mocha-phantomjs",
    "typings": "typings i"
  },
  "typings": "dist/index.d.ts",
  "version": "0.7.1"
}
